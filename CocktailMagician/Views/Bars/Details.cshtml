@model BarDetailsViewModel
@{
    ViewData["Title"] = @Model.Bar.Name;
}
<h3>@Model.Bar.Name</h3>

<style>
    .stars-outer {
        position: relative;
        display: inline-block;
    }

    .stars-inner {
        position: absolute;
        top: 0;
        left: 0;
        white-space: nowrap;
        overflow: hidden;
        width: 0;
    }

    .stars-outer::before {
        content: "\f005\f005\f005\f005\f005";
        font-family: 'Font Awesome 5 Free';
        font-weight: 900;
        color: #ccc;
    }

    .stars-inner::before {
        content: "\f005\f005\f005\f005\f005";
        font-family: 'Font Awesome 5 Free';
        font-weight: 900;
        color: #f8ce0b;
    }
</style>

<div class="container">
    <div class="col-md-6">
        <div style="display:inline-block;vertical-align:top;">


            @if (Model.Bar.ImagePath != null)
            {
                <img class="card-img-top image-bar-index" src="@Model.Bar.ImagePath" alt="Image">
            }
            else
            {
                <img class="card-img-top image-bar-index" src="~/images/noPhotoAvailable.jpg" alt="Card image cap">
            }
        </div>
        <div style="display:inline-block;">
            <div></div>
            <div class="container">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Rating:  @Model.Bar.Rating</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr class="@Model.Bar.Name">
                            <td>
                                <div class="stars-outer">
                                    <div class="stars-inner"></div>
                                    <span class="number-rating"></span>
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>

            <script>

        const rating = @Model.Bar.Rating;
                const starsTotal = 5;
        document.addEventListener('DOMContentLoaded', getRatings);

        function getRatings() {
            const starPercentage = (rating / starsTotal) * 100;
            const starPercentageRounded = `${Math.round(starPercentage / 10) * 10}%`;
            document.querySelector(` .stars-inner`).style.width = starPercentageRounded;
        }
            </script>
        </div>
        <div>

        </div>
        <h5>
            <br><strong>Address: </strong>@Model.Bar.Address</br>
            <br><strong>Cocktails:</strong>
            @string.Join(", ", Model.Bar.Cocktails.Select(x => x.Name))
        </h5>
        <p>
            <a asp-controller="Bars" asp-action="Review" asp-route-Id="@Model.Bar.Id" button type="submit" method="post" class="btn btn-primary">Review</a>
            @if (User.IsInRole("Admin"))
            {
                <a asp-controller="Bars" asp-action="Edit" asp-route-Id="@Model.Bar.Id" button type="submit" method="post" class="btn btn-primary">Edit</a>

                @if (Model.Bar.IsHidden == false)
                {
                    <a asp-controller="Bars" asp-action="Toggle" class="btn btn-danger" asp-route-Id="@Model.Bar.Id">Hide</a>
                }
                else
                {
                    <a asp-controller="Bars" asp-action="Toggle" class="btn btn-success" asp-route-Id="@Model.Bar.Id">Show</a>
                }
            }
            <br />
            @if (Model.BarReviews.Count() != 0)
            {
                <div class="container">
                    <div class="pull-right">
                        <h6><strong>Comments: </strong></h6>
                        @foreach (var review in Model.BarReviews)
                        {
                            <partial name="_BarReviewPartial" model="@review" />
                            <br />
                        }
                    </div>
                </div>
            }
        </p>
    </div>
</div>